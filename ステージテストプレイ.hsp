
	#packopt name "ステージテストプレイヤー"

	stage_frame_str=""

*menu_loop
	pos 10,70
	input stage_frame_str,200,30,6
	stage_frame=0
	repeat
	stick key
	if key&1 {
		stage_number--
	}
	if key&2 {
		level--
	}
	if key&4 {
		stage_number++
	}
	if key&8 {
		level++
	}
	if key&32 {
		//enter
		break
	}
	if key&4096 {
		end
	}
	if level<0 {
		level=0
	}
	if level>4 {
		level=4
	}
	if stage_number<1 {
		stage_number=1
	}
	if stage_number>6 {
		stage_number=6
	}

	redraw 0
	color 0,0,0
	boxf
	color 255,255,255
	pos 10,10
	mes "Level="+level
	mes "Stage_number="+stage_number
	redraw 1
	await 16
	loop

	cls 4
	stage_frame=int(stage_frame_str)

	#include "hspogg.as"
	#include "d3m.hsp"

	#include "module/Bullet.as"
	#include "module/Bullet2.as"
	#include "module/Boss.as"
	#include "module/Enemy.as"
	#include "module/Select.as"
	#include "module/PlayerShot.as"
	#include "module/BackScreen.as"
	#include "module/LengthCheck.as"
	#include "module/StageFrameChecker.as"
	buffer 1
	gsel 0,0
	BackScreenInit
	dmmini
	BulletInit
	Bullet2Init
	BossInit
	PlayerShotInit
	EnemyInit

	gmode 3,0,0,64
	randomize
	BulletReset
	Bullet2Reset
	EnemyReset
	BossReset
	;dmmplay 0		//あほらしいので消します
	font msmincho,24,0
	player_x=30
	player_y=240
	Ctrl_time=0

	dmmload "res/se/Miss.wav",0,0
	dmmvol 0,-1000

	repeat
	PreTime=d3timer()
	getkey Esc,27
	if Esc=1 {
		gosub *StageSaveDataSave
		break
	}
	getkey Ctrl,17
	if Ctrl=0 and Ctrl_time<100 {
		Ctrl_time++
	}
	if Ctrl_time<=0 {
		Ctrl=0
	}
	if Ctrl=0 {
		if cnt\2=0 {
			gosub *KeyChecker
			PlayerShotMove
			BossMove
			EnemyMove
			gosub *BulletCalc
			//BomCalc
		}
	}else{
		if cnt\4=0 {
			gosub *KeyChecker
			PlayerShotMove
			BossMove
			EnemyMove
			gosub *BulletCalc
			//BomCalc
			Ctrl_time-4
		}
	}

	if skip_frame=1 {
		skip_frame=0
		continue cnt+1
	}

	redraw 0
	gosub *BackScreen
	gosub *PlayerDraw
	gosub *CtrlDraw
	BossDraw
	EnemyDraw
	PlayerShotDraw
	BulletDraw
	Bullet2Draw

	//ステージフレームが5以下の時はステージを隠す
	if stage_frame<=5 {
		pos 0,0
		gmode 0
		gcopy 1,0,0,640,480
		pos 100,100
		color 0,0,0
		mes "Now Loading..."
		pos 103,103
		color 255,255,255
		mes "Now Loading..."
		gmode 3,0,0,127
		await 32
	}
	if stage_frame>20 {
		getkey key1,49
		if key1=1 {
			gosub *StageSaveDataSave
			wait 10
		}
		getkey key2,50
		if key2=1 {
			BulletReset
			gosub *StageSaveDataLoad
			wait 10
		}
	}

	redraw 1
	NowTime=d3timer()
	if NowTime-PreTimew>16 {
		skip_frame=1
	}
	await 16
	loop

	dmmstop -1
	dialog "プログラムの実行が終了しました。",0,"System"
	goto *menu_loop

//
//ここから下は、サブルーチン
//

*KeyChecker
	stick key,15+2048,0
	if key&1 {
		player_x-player_speed
	}
	if key&2 {
		player_y-player_speed
	}
	if key&4 {
		player_x+player_speed
	}
	if key&8 {
		player_y+player_speed
	}
	getkey slow,16
	if slow=1 {
		player_speed=2
	}else{
		player_speed=5
	}
	if key&2048 {
		if slow=1 {
			if shot_wait\10=0 {
				repeat 3
				PlayerShotSet cos(deg2rad(Shot_Deg_Temp+120*cnt))*40-10,sin(deg2rad(Shot_Deg_Temp+120*cnt))*40-2
				loop
				Shot_Deg_Temp+20
				if Shot_Deg_Temp>=360 {
					Shot_Deg_Temp=0
				}
			}
		}else{
			if shot_wait\5=0 {
				PlayerShotSet 20,-2
				if Ctrl_time=100 and shot_wait\50=0 and shot_wait!0 {
					repeat 6
					PlayerShotSet cos(deg2rad(Shot_Deg_Temp+60*cnt))*80-10,sin(deg2rad(Shot_Deg_Temp+60*cnt))*80-2
					loop
					Shot_Deg_Temp+20
					if Shot_Deg_Temp>=360 {
						Shot_Deg_Temp=0
					}
				}
			}
		}
		shot_wait++
	}else{
		shot_wait=0
	}
	if player_y<0 : player_y=0
	if player_y>480 : player_y=480
	if player_x<0 : player_x=0
	if player_x>640 : player_x=640
	return

*BulletCalc
	#include "system/stage.as"
	BulletMove
	Bullet2Move
	stage_frame++
	return

*BackScreen
	//仮
;	color 64,64,64
;	boxf
	#include "system/BackScreen.as"

	//テスト用message
	pos 0,0
	color 255,255,255
	mes stage_frame

	//stage number
	pos 300,0
	if level>3 {
		color 0,0,0
		mes "STAGE:EXTRA"
	}else{
		color 0,0,0
		mes "STAGE:"+stage_number
	}
	pos 303,3
	if level>3 {
		color 255,255,255
		mes "STAGE:EXTRA"
	}else{
		color 255,255,255
		mes "STAGE:"+stage_number
	}

	pos 500,0
	color 0,0,0
	switch level
		case 0
		mes "Easy"
		swbreak
		case 1
		mes "Normal"
		swbreak
		case 2
		mes "Hard"
		swbreak
		case 3
		mes "Lunatic"
		swbreak
		case 4
		mes "Extra"
		swbreak
	swend
	pos 503,3
	color 255,255,255
	switch level
		case 0
		mes "Easy"
		swbreak
		case 1
		mes "Normal"
		swbreak
		case 2
		mes "Hard"
		swbreak
		case 3
		mes "Lunatic"
		swbreak
		case 4
		mes "Extra"
		swbreak
	swend
	pos 0,450
	color 0,0,0
	mes "MissCounter:"+MissSum
	pos 3,453
	color 255,255,255
	mes "MissCounter:"+MissSum
	fps=d3getfps()
	pos 600,440
	color 0,0,0
	mes fps
	pos 603,443
	color 255,255,255
	mes fps
	return

*PlayerDraw
	//仮
	color 0,0,255
	circle player_x-15,player_y-15,player_x+15,player_y+15

	if slow=1 {
		color 255,255,255
		circle player_x-5,player_y-5,player_x+5,player_y+5
		color 255,0,0
		circle player_x-5,player_y-5,player_x+5,player_y+5,0
	}

	if BulletMiss()=1 and MissCnt=0 {
		dmmplay 0
		//BulletReset
		MissSum++
		MissCnt=1
	}
	if Bullet2Miss()=1 and MissCnt=0 {
		dmmplay 0
		//BulletReset
		MissSum++
		MissCnt=1
	}

	if MissCnt>0 {
		color 255,0,0
		circle player_x-MissCnt*15,player_y-MissCnt*15,player_x+MissCnt*15,player_y+MissCnt*15
		MissCnt++
		if MissCnt>30 : MissCnt=0
	}

	if key&2048 {
	}
	return

*CtrlDraw
	color 127,127,255
	boxf 640-Ctrl_time,465,640,480
	return

*StageSaveDataLoad
	//bload "user/save.bin",stage_frame
	return
*StageSaveDataSave
	//bsave "user/save.bin",stage_frame
	return

//
//システム用関数
//
#defcfunc PlayerInfo int PlayerInfoPrm1		//プレイヤーの情報を返す関数
	switch PlayerInfoPrm1
	case 0		//player_x
	return player_x

	case 1		//player_y
	return player_y

	swend
	return

#defcfunc FrameInfo
	return stage_frame

//弾幕テンプレートスクリプト
	#include "BulletFunction/1.as"

;Copyright all 2024 COMET & Maple